import React from "react";
import { Link } from "react-router-dom";

import ArticleIcon from "@mui/icons-material/Article"; // for FileText
import AttachMoneyIcon from "@mui/icons-material/AttachMoney"; // for DollarSign
import SecurityIcon from "@mui/icons-material/Security"; // for Shield
import TrendingUpIcon from "@mui/icons-material/TrendingUp"; // for TrendingUp
import HomeIcon from "@mui/icons-material/Home"; // for Home
import GroupsIcon from "@mui/icons-material/Groups"; // for Users

// ---------- Types ----------
interface Category {
  icon: React.ElementType;
  title: string;
  description: string;
  guides: string[];
  color: string; // Tailwind classes for bg/text colors
}

interface FeaturedGuide {
  id: number | string;
  title: string;
  description: string;
  category: string;
  readTime: string;
  difficulty: string;
  image?: string;
  steps: number;
}

// ---------- Data ----------
const guideCategories: Category[] = [
  {
    icon: ArticleIcon,
    title: "Th·ªß t·ª•c ph√°p l√Ω",
    description: "H∆∞·ªõng d·∫´n c√°c th·ªß t·ª•c mua b√°n, chuy·ªÉn nh∆∞·ª£ng b·∫•t ƒë·ªông s·∫£n",
    guides: [
      "Th·ªß t·ª•c mua b√°n nh√† ƒë·∫•t t·ª´ A-Z",
      "C√°ch ki·ªÉm tra ph√°p l√Ω b·∫•t ƒë·ªông s·∫£n",
      "H∆∞·ªõng d·∫´n l√†m s·ªï ƒë·ªè, s·ªï h·ªìng",
    ],
    color: "bg-blue-100 text-blue-800",
  },
  {
    icon: AttachMoneyIcon,
    title: "T√†i ch√≠nh & Vay v·ªën",
    description: "Ki·∫øn th·ª©c v·ªÅ vay ng√¢n h√†ng, t·ªëi ∆∞u h√≥a t√†i ch√≠nh",
    guides: [
      "H∆∞·ªõng d·∫´n vay mua nh√† l√£i su·∫•t th·∫•p",
      "C√°ch t√≠nh to√°n kh·∫£ nƒÉng t√†i ch√≠nh",
      "C√°c g√≥i vay ∆∞u ƒë√£i t·ª´ ng√¢n h√†ng",
    ],
    color: "bg-green-100 text-green-800",
  },
  {
    icon: TrendingUpIcon,
    title: "ƒê·∫ßu t∆∞ & Ph√¢n t√≠ch",
    description: "Chi·∫øn l∆∞·ª£c ƒë·∫ßu t∆∞ v√† ph√¢n t√≠ch th·ªã tr∆∞·ªùng",
    guides: [
      "C√°ch ch·ªçn b·∫•t ƒë·ªông s·∫£n ƒë·∫ßu t∆∞ sinh l·ªùi",
      "Ph√¢n t√≠ch ti·ªÅm nƒÉng tƒÉng gi√°",
      "ƒê·∫ßu t∆∞ cho thu√™ hi·ªáu qu·∫£",
    ],
    color: "bg-purple-100 text-purple-800",
  },
  {
    icon: SecurityIcon,
    title: "B·∫£o hi·ªÉm & R·ªßi ro",
    description: "Qu·∫£n l√Ω r·ªßi ro v√† b·∫£o v·ªá t√†i s·∫£n",
    guides: [
      "B·∫£o hi·ªÉm b·∫•t ƒë·ªông s·∫£n c·∫ßn thi·∫øt",
      "C√°ch tr√°nh r·ªßi ro khi mua nh√†",
      "X·ª≠ l√Ω tranh ch·∫•p b·∫•t ƒë·ªông s·∫£n",
    ],
    color: "bg-red-100 text-red-800",
  },
  {
    icon: HomeIcon,
    title: "Thi·∫øt k·∫ø & X√¢y d·ª±ng",
    description: "H∆∞·ªõng d·∫´n thi·∫øt k·∫ø, x√¢y d·ª±ng v√† c·∫£i t·∫°o",
    guides: [
      "Thi·∫øt k·∫ø n·ªôi th·∫•t t·ªëi ∆∞u",
      "Quy tr√¨nh x√¢y d·ª±ng nh√† ·ªü",
      "C·∫£i t·∫°o nh√† c≈© hi·ªáu qu·∫£",
    ],
    color: "bg-yellow-100 text-yellow-800",
  },
  {
    icon: GroupsIcon,
    title: "Kinh nghi·ªám th·ª±c t·∫ø",
    description: "Chia s·∫ª kinh nghi·ªám t·ª´ chuy√™n gia",
    guides: [
      "B√≠ quy·∫øt ƒë√†m ph√°n gi√° th√†nh c√¥ng",
      "C√°ch ch·ªçn m√¥i gi·ªõi uy t√≠n",
      "Kinh nghi·ªám mua nh√† l·∫ßn ƒë·∫ßu",
    ],
    color: "bg-indigo-100 text-indigo-800",
  },
];

const featuredGuides: FeaturedGuide[] = [
  {
    id: 1,
    title: "H∆∞·ªõng d·∫´n ho√†n ch·ªânh: Mua nh√† l·∫ßn ƒë·∫ßu t·ª´ A-Z",
    description:
      "T·∫•t c·∫£ nh·ªØng g√¨ b·∫°n c·∫ßn bi·∫øt khi mua nh√† l·∫ßn ƒë·∫ßu, t·ª´ vi·ªác chu·∫©n b·ªã t√†i ch√≠nh ƒë·∫øn ho√†n t·∫•t th·ªß t·ª•c ph√°p l√Ω.",
    category: "Th·ªß t·ª•c ph√°p l√Ω",
    readTime: "15 ph√∫t",
    difficulty: "C∆° b·∫£n",
    image: "/placeholder.svg?height=200&width=300",
    steps: 8,
  },
  {
    id: 2,
    title: "Chi·∫øn l∆∞·ª£c ƒë·∫ßu t∆∞ b·∫•t ƒë·ªông s·∫£n cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu",
    description:
      "H∆∞·ªõng d·∫´n chi ti·∫øt v·ªÅ c√°ch b·∫Øt ƒë·∫ßu ƒë·∫ßu t∆∞ b·∫•t ƒë·ªông s·∫£n v·ªõi v·ªën √≠t, r·ªßi ro th·∫•p v√† l·ª£i nhu·∫≠n ·ªïn ƒë·ªãnh.",
    category: "ƒê·∫ßu t∆∞ & Ph√¢n t√≠ch",
    readTime: "20 ph√∫t",
    difficulty: "Trung b√¨nh",
    image: "/placeholder.svg?height=200&width=300",
    steps: 10,
  },
  {
    id: 3,
    title: "B√≠ quy·∫øt vay ng√¢n h√†ng mua nh√† v·ªõi l√£i su·∫•t t·ªët nh·∫•t",
    description:
      "C√°ch th·ª©c chu·∫©n b·ªã h·ªì s∆°, ƒë√†m ph√°n v·ªõi ng√¢n h√†ng v√† l·ª±a ch·ªçn g√≥i vay ph√π h·ª£p nh·∫•t.",
    category: "T√†i ch√≠nh & Vay v·ªën",
    readTime: "12 ph√∫t",
    difficulty: "C∆° b·∫£n",
    image: "/placeholder.svg?height=200&width=300",
    steps: 6,
  },
];

// ---------- UI helpers ----------
const card = "rounded-2xl border border-slate-200 bg-white shadow-sm";
const badge = "inline-flex items-center rounded-full bg-slate-100 px-3 py-1 text-xs font-medium text-slate-700";

const GuidesPage: React.FC = () => {
  return (
    <div className="container mx-auto px-4 py-8">
      <div className="mb-12 text-center">
        <h1 className="mb-4 text-4xl font-bold text-slate-900">T∆∞ v·∫•n & H∆∞·ªõng d·∫´n</h1>
        <p className="mx-auto max-w-3xl text-xl text-slate-600">
          Ki·∫øn th·ª©c chuy√™n s√¢u v√† h∆∞·ªõng d·∫´n th·ª±c t·∫ø gi√∫p b·∫°n ƒë∆∞a ra quy·∫øt ƒë·ªãnh ƒë√∫ng ƒë·∫Øn trong ƒë·∫ßu t∆∞ b·∫•t ƒë·ªông s·∫£n
        </p>
      </div>

      {/* Featured Guides */}
      <section className="mb-12">
        <h2 className="mb-6 text-2xl font-bold">H∆∞·ªõng d·∫´n n·ªïi b·∫≠t</h2>
        <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
          {featuredGuides.map((guide) => (
            <article key={guide.id} className={`${card} overflow-hidden transition hover:shadow-md`}>
              <img src={guide.image || "/placeholder.svg"} alt={guide.title} className="h-48 w-full object-cover" />
              <div className="p-6">
                <div className="mb-3 flex items-center justify-between">
                  <span className={badge}>{guide.category}</span>
                  <span className="text-sm text-slate-500">{guide.steps} b∆∞·ªõc</span>
                </div>
                <h3 className="mb-2 line-clamp-2 text-lg font-semibold">{guide.title}</h3>
                <p className="mb-4 line-clamp-3 text-sm text-slate-600">{guide.description}</p>
                <div className="mb-4 flex items-center justify-between text-xs text-slate-500">
                  <span>‚è±Ô∏è {guide.readTime}</span>
                  <span>üìä {guide.difficulty}</span>
                </div>
                <Link to={`/guides/${guide.id}`} className="block">
                  <button className="w-full rounded-xl bg-blue-600 px-4 py-2 font-medium text-white transition hover:bg-blue-700">
                    Xem h∆∞·ªõng d·∫´n
                  </button>
                </Link>
              </div>
            </article>
          ))}
        </div>
      </section>

      {/* Guide Categories */}
      <section className="mb-12">
        <h2 className="mb-6 text-2xl font-bold">Danh m·ª•c h∆∞·ªõng d·∫´n</h2>
        <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
          {guideCategories.map((category, idx) => {
            const Icon = category.icon;
            return (
              <article key={idx} className={`${card} transition hover:shadow-md`}>
                <div className="p-6">
                  <div className="mb-4 flex items-center">
                    <div className={`mr-4 rounded-lg p-3 ${category.color}`}>
                      <Icon className="h-6 w-6" />
                    </div>
                    <h3 className="text-xl font-semibold">{category.title}</h3>
                  </div>
                  <p className="mb-4 text-slate-600">{category.description}</p>
                  <div className="mb-6 space-y-2">
                    {category.guides.map((g, i) => (
                      <div key={i} className="flex items-center text-sm text-slate-700">
                        <span className="mr-3 h-2 w-2 rounded-full bg-blue-600" />
                        {g}
                      </div>
                    ))}
                  </div>
                  <button className="w-full rounded-xl border border-slate-300 bg-white px-4 py-2 text-slate-800">
                    Xem t·∫•t c·∫£ h∆∞·ªõng d·∫´n
                  </button>
                </div>
              </article>
            );
          })}
        </div>
      </section>

      {/* Quick Tips */}
      <section className="rounded-2xl bg-blue-50 p-8">
        <div className="mb-8 text-center">
          <h2 className="mb-2 text-2xl font-bold">M·∫πo nhanh t·ª´ chuy√™n gia</h2>
          <p className="text-slate-600">Nh·ªØng l·ªùi khuy√™n h·ªØu √≠ch cho vi·ªác mua b√°n v√† ƒë·∫ßu t∆∞ b·∫•t ƒë·ªông s·∫£n</p>
        </div>
        <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
          {[
            { emoji: "üí°", title: "Ki·ªÉm tra ph√°p l√Ω", text: "Lu√¥n x√°c minh ƒë·∫ßy ƒë·ªß gi·∫•y t·ªù ph√°p l√Ω tr∆∞·ªõc khi giao d·ªãch" },
            { emoji: "üìç", title: "V·ªã tr√≠ l√† quan tr·ªçng nh·∫•t", text: "Ch·ªçn v·ªã tr√≠ c√≥ ti·ªÅm nƒÉng ph√°t tri·ªÉn v√† giao th√¥ng thu·∫≠n l·ª£i" },
            { emoji: "üí∞", title: "Chu·∫©n b·ªã t√†i ch√≠nh", text: "D·ª± tr√π 20-30% t·ªïng gi√° tr·ªã ƒë·ªÉ chi tr·∫£ c√°c kho·∫£n ph√≠" },
            { emoji: "üîç", title: "Nghi√™n c·ª©u th·ªã tr∆∞·ªùng", text: "So s√°nh gi√° c·∫£ v√† t√¨m hi·ªÉu xu h∆∞·ªõng th·ªã tr∆∞·ªùng" },
          ].map((tip, i) => (
            <div key={i} className="rounded-lg bg-white p-4 text-center">
              <div className="mb-2 text-2xl">{tip.emoji}</div>
              <h4 className="mb-2 font-semibold">{tip.title}</h4>
              <p className="text-sm text-slate-600">{tip.text}</p>
            </div>
          ))}
        </div>
      </section>

      {/* CTA */}
      <section className="mt-12 text-center">
        <h2 className="mb-2 text-2xl font-bold">C·∫ßn t∆∞ v·∫•n c√° nh√¢n?</h2>
        <p className="mb-6 text-slate-600">Li√™n h·ªá tr·ª±c ti·∫øp ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n chi ti·∫øt v·ªÅ t√¨nh hu·ªëng c·ª• th·ªÉ c·ªßa b·∫°n</p>
        <div className="flex flex-col justify-center gap-4 sm:flex-row">
          <button className="rounded-xl bg-blue-600 px-5 py-3 text-white hover:bg-blue-700">ƒê·∫∑t l·ªãch t∆∞ v·∫•n</button>
          <button className="rounded-xl border border-slate-300 bg-white px-5 py-3 text-slate-800">Chat Zalo ngay</button>
        </div>
      </section>
    </div>
  );
};

export default GuidesPage;
